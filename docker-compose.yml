version: '3.9'

services:
  nginx-8000:
    image: nginx:alpine
    container_name: nginx-8000
    restart: unless-stopped
    ports:
      - "8000:8000"
#      - "9000:9000"
    volumes:
      - ./infra/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./infra/nginx/certs/:/etc/nginx/certs:ro
      - static_volume:/static:ro

  web:
    build:
      context: .
      dockerfile: Dockerfile

    restart: unless-stopped
#    command: uv run python app/manage.py runserver 0.0.0.0:8000
#    command: uv run gunicorn ai_agent_creator.wsgi:application --bind 0.0.0.0:8000 --workers 2
    command: >
      uv run sh -c "python app/manage.py collectstatic --noinput &&
                    gunicorn ai_agent_creator.wsgi:application --bind 0.0.0.0:8000 --workers 2"
    environment:
      - REDIS_HOST=redis://redis:6379
      - PYTHONPATH=/app/app
    volumes:
      - ./app:/app/app
      - static_volume:/app/static
    env_file:
      - .env
    depends_on:
      - redis
    expose:
      - "8000"

#  portainer:
#    container_name: portainer
#    image: portainer/portainer-ce:latest
#    restart: always
#    expose:
#      - 9000
#      - 9443
#    ports:
#      - 9443:9443
#    environment:
#      - TRUSTED_ORIGINS=${DOMAIN:-example.com}
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock
#      - portainer_data:/data

  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    command: uv run celery --workdir app -A ai_agent_creator worker -l info --concurrency 2
    environment:
      - REDIS_HOST=redis://redis:6379
    volumes:
      - ./app:/app/app
    env_file:
      - .env
    depends_on:
      - redis
      - web

  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    command: uv run celery --workdir app -A ai_agent_creator beat -l info --scheduler django_celery_beat.schedulers.DatabaseScheduler
    environment:
      - REDIS_HOST=redis://redis:6379
    volumes:
      - ./app:/app/app
    env_file:
      - .env
    depends_on:
      - redis
      - web

  redis:
    restart: unless-stopped
    image: "redis:alpine"
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

volumes:
  redis_data:
  portainer_data:
  static_volume: